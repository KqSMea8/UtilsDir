//------------------------------------------------------------------------------
/* Файл CalcDFT_64.h

Класс CCalcDFT_64f ПРЕДНАЗНАЧЕН для выполнения расчетов прямого ДПФ для
данных типа double. Класс является насоедником базового класса CustomCalcFFT".

СОСТАВ класса:
- тройка ООП (деструктор, конструктор копирования и оператор присваивания);
- две функции для выполнения прямого БПФ.

Наследуюемын от базового класса функции:
- четыре свойста с функциями Get и Set;
- две функции получения размеров.

*/
//------------------------------------------------------------------------------
#pragma once
#include "CalcFFT_64.h"
//------------------------------------------------------------------------------
class CCalcDFT_64f : public CCustomCalcFFT
{
private:
	int m_sizeDFT;
	int m_sizeDFT_2;
	double m_kNorma;

	CCalcFFT_64f * m_pCalcFFT;

	SmartArray<double> m_saSrc_d;	// размер m_sizeDFT
	SmartArray<Ipp64fc> m_saSrc_dc;	// размер m_sizeFFT

	SmartArray<Ipp64fc> m_saExp1;	// размер m_sizeDFT
	SmartArray<Ipp64fc> m_saExp2;	// размер m_sizeFFT

	// Приватные функции ------------------------------------
	long CreateMassiveExp();

protected:

public:
	CCalcDFT_64f(const int size = 0);
	~CCalcDFT_64f();
	CCalcDFT_64f(const CCalcDFT_64f & val);
	CCalcDFT_64f & operator = (const CCalcDFT_64f & val);

	// Задание параметров DFT.
	// - size - размер исходного буфера данных.
	// В функции задаются служебные данные, необходимые для
	// выполнения преобразования функциями CalcFwd
	long SetParam(const int size);
	
	// Переопределенная функция базового класса.
	// Получение размера данных = m_sizeDFT, задаваемого в SetParam
	// Возвращаемое значение:
	// 0 - не было вызова SetParam;
	// > 0 - размер.
	virtual int GetSize();

	// Переопределенная функция базового класса.
	// Получение половины размера данных = m_sizeDFT / 2, задаваемого в SetParam
	// Возвращаемое значение:
	// 0 - не было вызова SetParam;
	// > 0 - размер.
	virtual int GetHalfSize();

	// Прямое DFT.
	// Преобразование реального сигнала в комплексный спектр.
	// - pSrc - реальные входные данные с размером от 1 до m_sizeFFT;
	// - pDst - комплексные выходные данные с размером m_sizeFFT / 2;
	// - sizeSrc - размер входного массива.
	// Если sizeSrc = 0, то размер входного массива = m_sizeFFT.
	// Если sizeSrc меньше m_sizeDFT, то перед расчетами во входной массив
	// добавляются нули. Если больше - то лишние данные игнорируются.
	// Возвращается код ошибки ErrorCodes.
	long CalcFwd_RToC(double * pSrc, Ipp64fc * pDst, const int sizeSrc = 0);
};
//------------------------------------------------------------------------------