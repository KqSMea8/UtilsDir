//-----------------------------------------------------------------------------
#pragma once
//-----------------------------------------------------------------------------
#define SIZE_STRING_FOR_VALUE 32
#define MAX_COUNTER_FOR_SAME_LINE 7
//-----------------------------------------------------------------------------
/*		ѕараметры дл€ работы с одним каналом (вольтметры и т.д.).

	Ќовое значение округл€етс€ следующим образом:
- точность отображени€ величины определ€етс€ средней изменчивостью значени€;
- максимальна€ точность отображени€ определ€етс€ как погрешность канала,
  делЄнна€ на корень из кол-ва усреднений;
- кол-во значащих цифр при значении первой цифры 3 - не менее 3;
- кол-во значащих цифр при значении первой цифры 1 или 2 - не менее 4.
- кол-во значащих цифр не может измен€тьс€ больше, чем на 1.

	nIndxPoint - индекс дес€тичной точки, если не задан при инициализации, то
определ€етс€ по значени€м MaxLevel и максимальной точности отображени€.

	ѕерва€ позици€ в sValueCur - это всегда знак.

	ѕри получении нового числа, оно преобразуетс€ в строку (sValueCur),
котора€ сравниваетс€ со строкой предыдущего значени€ (sValueOld). Ёти строки
сравниваютс€, и если они совпадают MAX_COUNTER_FOR_SAME_LINE раз, то
последний значащий разр€д в sValueCur измен€етс€ на 1.
*/
//-----------------------------------------------------------------------------
struct STRUCT_VIEW_RESALT
{
	BYTE bFlags;		// флаги структуры
	BYTE nCounter;		// счЄтчик одинаковых строк
	BYTE nDigitOld;		// кол-во значащих цифр в последнем значении
	BYTE nIndxPointInt;	// индекс дес€тичной точки, оптимальный с точки зрени€ dll
	BYTE nIndxPointExt;	// индекс дес€тичной точки, заданной извне
	char reserved1;		// 
	char reserved2;		// 
	char reserved3;		// 

	float alfa;			// параметр усреднени€ изменени€ значени€
	float valueOld;		// прежнее значение
	float valueDelta;	// квадрат среднего изменени€ значени€
	float uncertainty;	// точность (неопределЄнность) отображени€

	wchar_t sValueCur[SIZE_STRING_FOR_VALUE];	// строка с текущим значением
	wchar_t sValueOld[SIZE_STRING_FOR_VALUE];	// строка с прежним значением
};
//-----------------------------------------------------------------------------