// Класс для обмена данными между программами через именованные каналы (клиент)
// Версия 2.1.1 @ 2017/04/14
//
// Использование:

// - Проинициализировать экземпляр класса с 1 параметром: 
//   CZetPipeClient pipeClient(*Имя именованного канала*);
//   CZetPipeClient pipeClient(L"\\\\.\\pipe\\testMyPipes");

//   Подключиться к именованному каналу
//   pipeClient.Connect(100);   // Подключаемся к именованному каналу в течении 100 мс

//   Вызвать функцию для отправки данных с ожиданием ответа или без ожидания ответа:
//   Отправка команды без ожидания ответа
//   *Результат* SendData(*Указатель на массив отправляемых данных*, *Размер отправляемых данных*, *Кол-во отправленных данных*)
//   Отправка команды с ожиданием ответа
//   *Результат* RequestData(*Указатель на массив отправляемых данных*, *Размер отправляемых данных*, 
//             *Указатель на массив полученных данных*, *Размер полученных данных*, *Кол-во принятых данных*)

//   Отключиться от именованного канала
//   pipeClient.Disconnect();

#ifndef zetpipecomm_client
#define zetpipecomm_client

#include <string>
#include <Windows.h>

class CZetPipeClient
{
// Константы
private:
	const static DWORD DEFAULT_CONNECTION_TIMEOUT = 1000;   // Максимальное время ожидания подключения по умолчанию

// Данные
private:
	HANDLE m_hPipe = INVALID_HANDLE_VALUE;   // Дескриптор созданного именнованного канала между клиентом и сервером
	LPTSTR m_lpszPipeCommPipeName = L"";     // Имя именованного канала для передачи данных между клиентом и сервером

// Функции
public:
	CZetPipeClient();
	CZetPipeClient(_In_ LPTSTR lpszPipeName_);    // Инициализация клиента именованного канала
	~CZetPipeClient();

	// Функция подключения к именованному каналу
	// Вх. аргументы: dwMaxTimeOut_ - время ожидания именованного канала при подключении
	// Вых. аргументы: результат подключения к именованному каналу
	BOOL Connect(_In_ DWORD dwMaxTimeOut_ = DEFAULT_CONNECTION_TIMEOUT);

	// Функция отключения от именованного канала
	// Вых. аргументы: результат отключения от именованного канала
	BOOL Disconnect();

	// Функция переподключения к именованному каналу
	// Вх. аргументы: dwMaxTimeOut_ - время ожидания именованного канала при подключении
	// Вых. аргументы: результат подключения к именованному каналу
	BOOL Reconnect(_In_ DWORD dwMaxTimeOut_ = DEFAULT_CONNECTION_TIMEOUT);

	// Функция отправки данных по именованному каналу без ожидания ответных данных
	// Вх. аргументы: lpInData_      - указатель на массив данных для отправки
	//                dwInDataSz_    - размер массива данных для отправки
	//                pdwSentDataSz_ - размер переданных данных
	// Вых. аргументы: результат отправки данных
	BOOL SendData(_In_ LPVOID lpInData_, _In_ DWORD dwInDataSz_, _Out_opt_ DWORD* pdwSentDataSz_ = nullptr);

	// Функция отправки данных по именованному каналу с ожиданием ответных данных
	// Вх. аргументы: lpInData_      - указатель на массив данных для отправки
	//                dwInDataSz_    - размер массива данных для отправки
	//                lpOutData_     - указатель на массив данных для ответа
	//                dwOutDataSz_   - размер массива данных для ответа
	//                pdwSentDataSz_ - размер переданных данных
	// Вых. аргументы: результат отправки данных
	BOOL RequestData(_In_ LPVOID lpInData_, _In_ DWORD dwInDataSz_, _In_ LPVOID lpOutData_, _In_ DWORD dwOutDataSz_, _Out_ DWORD* pdwReadDataSz_ = nullptr);
};

#endif