//------------------------------------------------------------------------------
#pragma once
#include <ZetTools\include\ZetTools.h>
//------------------------------------------------------------------------------
/* Структура данных, передаваемая из Corr.exe в UNIT-2.
	Создавать экземпляры этой структуры не следует!
	Первое поле - это обязательно размер данных в структуре.
	size - это НЕ sizeof(StructForUNIT2)!!!
	size = см. в TestSize		
*/ 
//------------------------------------------------------------------------------
#define SizeItemsInByte (sizeof(StructCorrForUNIT2))
#define SizeOneArrayInByte(sizeArray) (sizeof(float) * sizeArray)
#define SizeAllArraysInByte(sizeArray, nArray) (SizeOneArrayInByte(sizeArray) * nArray)
//------------------------------------------------------------------------------
struct StructCorrForUNIT2
{
	DWORD size;				// размер всех данных этой структуры
	DWORD sizeOneArray;		// размер одного массива в отсчетах

	DWORD indxKit;			// индекс контейнера
	WORD numArray;			// кол-во массивов, данные которых есть в структуре
	bool bOldData;			// данные ушли в интерфейс компонента или нет
	bool b1;

	float xPosExtremum_1;	// Х координата экструмума 1 - максимум корреляционной функции
	float xPosExtremum_2;	// Х координата экструмума 2 - зеркальный максимум разностной функции
	float xPosExtremum_3;	// Х координата экструмума 3 - максимум огибающей корреляционной функции
	float xPosExtremum_4;	// Х координата экструмума 4 - минимум корреляционной функции
	float xPosIntersection;
	
// 	float yValExtremum_1;	// значение экструмума 1 - максимум корреляционной функции
// 	float yValExtremum_2;	// значение экструмума 2 - зеркальный максимум разностной функции
// 	float yValExtremum_3;	// значение экструмума 3 - максимум огибающей корреляционной функции
// 	float yValExtremum_4;	// значение экструмума 4 - минимум корреляционной функции
	
	CZetTime ztTime;		// время данных

	StructCorrForUNIT2();
	// Задание значения поля size структуры
	void SetSizeOfStruct();

	// Тестирование полей структуры, связанных с размерами.
	// Возвращаемое значение - успешность теста.
	bool TestSize(DWORD * pShift = nullptr);

	// Тестирование структуры на предмет размера и получение указателя
	// на массив с индексом indxArray (счет с 0), содержащийся в структуре.
	// Возвращаемое значение - успешность теста.
	// Если тест не успешный, то указатель приравнивается nullptr.
	bool GetPointers(const int indxArray, float ** ppDataArray);
};
//------------------------------------------------------------------------------